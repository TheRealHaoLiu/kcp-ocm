#!/bin/bash

DEMO_DIR="$( dirname "${BASH_SOURCE[0]}" )"
. ${DEMO_DIR}/demo-magic

ROOT_DIR="$( cd ${DEMO_DIR}/../.. && pwd)"
KUBECONFIG_DIR=${KUBECONFIG_DIR:-${DEMO_DIR}/kubeconfig}
KCP_ROOT="${DEMO_DIR}/kcp"

TYPE_SPEED=30
# PROMPT_AFTER=1
DEMO_PROMPT="☸️ $ "

# colors
COLOR_OFF='\033[0m'       # Text Reset
RED='\033[0;31m'          # Red
GREEN='\033[0;32m'        # Green
YELLOW='\033[0;33m'       # Yellow

# function wait() {
#   if [[ -n "${NO_WAIT}" ]]; then
#     sleep 2
#   else
#     if [[ -n "${1-}" ]]; then
#       sleep "$1"
#     else
#       wait
#     fi
#   fi
# }

function comment() {
  echo -e '\033[0;33m>>> '$1' <<<\033[0m'
}

clear

comment "On the open-cluster-management hub"
export KUBECONFIG=${KUBECONFIG_DIR}/hub.kubeconfig

pe "kubectl get mch -n open-cluster-management"
pe "kubectl get managedcluster"

wait
comment "Importing managedcluster to the hub..."

i=1
for file in $(ls ${KUBECONFIG_DIR}/managedclusters/*); do
  pe "./kubectl-cm attach cluster demo-managedcluster-${i} --cluster-kubeconfig=${file}"
  i=$((i+1))
done
pe "kubectl get managedclusters"

wait
comment "Create a new managedclusterset"

pe "kubectl apply -f resources/managedclusterset.yaml"

for managedcluster in $(kubectl get managedcluster -o custom-columns=NAME:.metadata.name --no-headers); do
  pe "kubectl label managedcluster ${managedcluster} cluster.open-cluster-management.io/clusterset=demo-managedclusterset"
done

pe "kubectl get managedclusterset demo-managedclusterset -o yaml"

wait
comment "Adding the managedcluster to the managedclusterset"

kubectl get namespace demo &> /dev/null || pe "kubectl create namespace demo"
pe "kubectl apply -f resources/managedclustersetbinding.yaml"

export KUBECONFIG=${KCP_ROOT}/.kcp/data/admin.kubeconfig
#workaround for a kcp issue https://github.com/kcp-dev/kcp/issues/157 
kubectl get namespace default &> /dev/null || kubectl create namespace default
#end workaround

kubectl config view --minify=true --raw=true > ${KUBECONFIG_DIR}/kcp/admin.kubeconfig
kubectl config view --minify=true --raw=true | sed 's/\:6443/\:6443\/clusters\/demo/g' > ${KUBECONFIG_DIR}/kcp/demo.kubeconfig

wait
clear

comment 'On KCP logical cluster name "demo"'
export KUBECONFIG=${KUBECONFIG_DIR}/kcp/demo.kubeconfig
pe "kubectl config view --minify | grep server:"
pe "kubectl get crd"

comment 'Creating deployment on logical cluster'
kubectl get namespace default &> /dev/null || pe "kubectl create namespace default" 
pe "kubectl apply -f resources/deployment.yaml"

wait
clear

#on hub 
comment "On the open-cluster-management hub"
export KUBECONFIG=${KUBECONFIG_DIR}/hub.kubeconfig
comment "KCP-OCM controller creates Placement"
pe "kubectl get placement -n demo"
comment "OCM placement controller find cluster with matching critieria"
pe "kubectl get placementdecision -n demo -o yaml"

wait
clear

#TODO
##on managedclusters 
#show deployment being created
